Metric = as.character(case_when(!is.na(PRODUCT) & PRODUCT != 'All products' ~ paste0(PRODUCT, " (", METRIC, ")"),
T ~ METRIC)),
Year = YEAR,
Sector = as.character(SECTOR),
Statistic = as.character(STATISTIC),
Value = VALUE,
Variance = VARIANCE) %>%
select(-c(PRODUCT, YEAR, SECTOR, METRIC, STATISTIC, VALUE, VARIANCE)) %>%
as.data.frame()
##-----------------------------##
# Formatting of final dataset#####
##-----------------------------##
# All combinations
all_combos <- data_final %>%
select(Year, Sector, Statistic, Metric, N_total) %>%
reshape2::dcast(Year + Sector + Statistic ~ Metric, value.var = 'N_total', fill = 0) %>%
reshape2::melt(c('Year', 'Sector','Statistic')) %>%
mutate(Metric = variable,
N_total = value) %>%
select(-value, -variable)
# Sector confidentiality (if cp, ms or shoreside are suppressed then don't show all)
conf_proctype <- filter(data_final, Sector != 'All') %>%
select(Year, Sector, Metric, Statistic, Value) %>%
group_by(Year, Metric, Statistic) %>%
summarize(conf = sum(is.na(Value))) %>%
full_join(data_final) %>%
mutate(Value = case_when(conf == 1 & Sector == 'All' ~ NA_real_,
T ~ Value),
Variance = case_when(conf == 1 & Sector == 'All' ~ NA_real_,
T ~ Variance),
q25 = case_when(conf == 1 & Sector == 'All' ~ NA_real_,
T ~ q25),
q75 = case_when(conf == 1 & Sector == 'All' ~ NA_real_,
T ~ q75))
# Adding whiting/non-whiting confidentiality checks
data_final_0notincluded <- right_join(data_final, conf_proctype)
# Add in all combos so that when a field doesn't exist it is populated with zero
data_final_allcombosnew <- full_join(data_final_0notincluded, all_combos) %>%
# q25, q75, value, variance, N will be NA for the N = 0 added from all_combos. Add in here
# N is NA when value is suppressed.
mutate(Value = case_when(N_total == 0 ~ 0,
T ~ Value),
Variance = case_when(N_total == 0 ~ 0,
T ~ Variance),
q25 = case_when(N_total == 0 ~ 0,
T ~ q25),
q75 = case_when(N_total == 0 ~ 0,
T ~ q75),
N = case_when(N_total == 0 ~ '0',
is.na(Value) ~ 'NA',
T ~ as.character(N_total))) %>%
select(-conf, -N_total)
# Final formatting
data_final_format <- data_final_allcombosnew %>%
rbind(tac_final, unused_tac) %>%
mutate(Value = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Markup')
& Sector == 'Catcher-Processor' ~ NA_real_,
T ~ Value),
Order = case_when(grepl('Surimi', Metric) ~ 1,
grepl('Fishmeal', Metric) ~ 2,
grepl('Fillet', Metric) ~ 3,
grepl('Headed-and-gutted', Metric) ~ 4,
grepl('Frozen whole/Round', Metric) ~ 5,
grepl('Minced', Metric) ~ 6,
grepl('Fish oil', Metric) ~ 7,
grepl('Unprocessed', Metric) ~ 8,
grepl('Other', Metric) ~ 9),
tab = case_when(grepl('Percent by value', Metric) ~ 'Not in use',
grepl('Percent by weight', Metric) ~ 'Not in use',
grepl('Roe', Metric) ~ 'Not in use',
grepl('Surimi', Metric) ~ 'Product',
grepl('Fishmeal', Metric) ~ 'Product',
grepl('Fillet', Metric) ~ 'Product',
grepl('Headed-and-gutted', Metric) ~ 'Product',
grepl('Frozen whole/Round', Metric) ~ 'Product',
grepl('Minced', Metric) ~ 'Product',
grepl('Fish oil', Metric) ~ 'Product',
grepl('Unprocessed', Metric) ~ 'Product',
grepl('Other', Metric) ~ 'Product',
grepl('Commercial catch', Metric) ~ 'TACU',
grepl('Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Percent Commercial catch', Metric) ~ 'TACU',
grepl('Percent Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Initial allocation', Metric) ~ 'TACU',
grepl('Final allocation', Metric) ~ 'TACU',
T ~ 'Summary')) %>%
group_by(Metric, Statistic) %>%
mutate(
unit = case_when(max(Value, na.rm = T) < 1e3 ~ '',
max(Value, na.rm = T) < 1e6 ~ 'thousands',
max(Value, na.rm = T) < 1e9 ~ 'millions',
max(Value, na.rm = T) < 1e12 ~ 'billions',
T ~ 'help'),
ylab = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Production value',
'Production price (per lb)', 'Markup') | grepl('Production value', Metric) |
grepl('Production price', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " ", currentyear, " $)"),
Metric %in% c('Purchase (or catch) weight','Production weight') | grepl('Production weight', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " lbs)"),
Metric == 'Recovery rate' | grepl('Percent', Metric) ~ Metric,
Metric == 'Total allowable catch, non-tribal' ~ paste0(Metric, ": Total (", unit, ")"),
T ~ paste0(Metric, " (", unit, ")")),
Statistic = case_when(Metric == 'Percent Commercial catch' ~ 'Utilization by percent',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Utilization by percent',
(Metric == 'Commercial catch' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Unutilized allocation, post-reapportionment' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Initial allocation' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Final allocation' & Statistic == 'Total') ~ 'Utilization by weight',
T~ Statistic),
Metric = case_when(Metric == 'Percent Commercial catch' ~ 'Commercial catch',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Unutilized allocation, post-reapportionment',
T ~ Metric)) %>% distinct() %>%
data.frame()
data_final_format <- data_final_allcombosnew %>%
rbind(tac_final, unused_tac) %>%
mutate(Value = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Markup')
& Sector == 'Catcher-Processor' ~ NA_real_,
T ~ Value),
Order = case_when(grepl('Surimi', Metric) ~ 1,
grepl('Fishmeal', Metric) ~ 2,
grepl('Fillet', Metric) ~ 3,
grepl('Headed-and-gutted', Metric) ~ 4,
grepl('Frozen whole/Round', Metric) ~ 5,
grepl('Minced', Metric) ~ 6,
grepl('Fish oil', Metric) ~ 7,
grepl('Unprocessed', Metric) ~ 8,
grepl('Other', Metric) ~ 9),
tab = case_when(grepl('Percent by value', Metric) ~ 'Not in use',
grepl('Percent by weight', Metric) ~ 'Not in use',
grepl('Roe', Metric) ~ 'Not in use',
grepl('Surimi', Metric) ~ 'Product',
grepl('Fishmeal', Metric) ~ 'Product',
grepl('Fillet', Metric) ~ 'Product',
grepl('Headed-and-gutted', Metric) ~ 'Product',
grepl('Frozen whole/Round', Metric) ~ 'Product',
grepl('Minced', Metric) ~ 'Product',
grepl('Fish oil', Metric) ~ 'Product',
grepl('Unprocessed', Metric) ~ 'Product',
grepl('Other', Metric) ~ 'Product',
grepl('Commercial catch', Metric) ~ 'TACU',
grepl('Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Percent Commercial catch', Metric) ~ 'TACU',
grepl('Percent Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Initial allocation', Metric) ~ 'TACU',
grepl('Final allocation', Metric) ~ 'TACU',
T ~ 'Summary')) %>%
group_by(Metric, Statistic) %>%
mutate(
unit = case_when(max(Value, na.rm = T) < 1e3 ~ '',
max(Value, na.rm = T) < 1e6 ~ 'thousands',
max(Value, na.rm = T) < 1e9 ~ 'millions',
max(Value, na.rm = T) < 1e12 ~ 'billions',
T ~ 'help'),
ylab = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Production value',
'Production price (per lb)', 'Markup') | grepl('Production value', Metric) |
grepl('Production price', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " ", currentyear, " $)"),
Metric %in% c('Purchase (or catch) weight','Production weight') | grepl('Production weight', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " lbs)"),
Metric == 'Recovery rate' | grepl('Percent', Metric) ~ Metric,
Metric == 'Total allowable catch, non-tribal' ~ paste0(Metric, ": Total (", unit, ")"),
T ~ paste0(Metric, " (", unit, ")")),
Statistic = case_when(Metric == 'Percent Commercial catch' ~ 'Utilization by percent',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Utilization by percent',
(Metric == 'Commercial catch' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Unutilized allocation, post-reapportionment' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Initial allocation' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Final allocation' & Statistic == 'Total') ~ 'Utilization by weight',
T~ Statistic),
Metric = case_when(Metric == 'Percent Commercial catch' ~ 'Commercial catch',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Unutilized allocation, post-reapportionment',
T ~ Metric)) %>%
mutate(ylab = case_when(Metric == 'Utilization by percent' ~ 'Attainment (%)',
Metric == 'Utilization by weight' ~ 'Metric tons (thousands)',
T ~ ylab))
data_final_format <- data_final_allcombosnew %>%
rbind(tac_final, unused_tac) %>%
mutate(Value = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Markup')
& Sector == 'Catcher-Processor' ~ NA_real_,
T ~ Value),
Order = case_when(grepl('Surimi', Metric) ~ 1,
grepl('Fishmeal', Metric) ~ 2,
grepl('Fillet', Metric) ~ 3,
grepl('Headed-and-gutted', Metric) ~ 4,
grepl('Frozen whole/Round', Metric) ~ 5,
grepl('Minced', Metric) ~ 6,
grepl('Fish oil', Metric) ~ 7,
grepl('Unprocessed', Metric) ~ 8,
grepl('Other', Metric) ~ 9),
tab = case_when(grepl('Percent by value', Metric) ~ 'Not in use',
grepl('Percent by weight', Metric) ~ 'Not in use',
grepl('Roe', Metric) ~ 'Not in use',
grepl('Surimi', Metric) ~ 'Product',
grepl('Fishmeal', Metric) ~ 'Product',
grepl('Fillet', Metric) ~ 'Product',
grepl('Headed-and-gutted', Metric) ~ 'Product',
grepl('Frozen whole/Round', Metric) ~ 'Product',
grepl('Minced', Metric) ~ 'Product',
grepl('Fish oil', Metric) ~ 'Product',
grepl('Unprocessed', Metric) ~ 'Product',
grepl('Other', Metric) ~ 'Product',
grepl('Commercial catch', Metric) ~ 'TACU',
grepl('Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Percent Commercial catch', Metric) ~ 'TACU',
grepl('Percent Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Initial allocation', Metric) ~ 'TACU',
grepl('Final allocation', Metric) ~ 'TACU',
T ~ 'Summary')) %>%
group_by(Metric, Statistic) %>%
mutate(
unit = case_when(max(Value, na.rm = T) < 1e3 ~ '',
max(Value, na.rm = T) < 1e6 ~ 'thousands',
max(Value, na.rm = T) < 1e9 ~ 'millions',
max(Value, na.rm = T) < 1e12 ~ 'billions',
T ~ 'help'),
ylab = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Production value',
'Production price (per lb)', 'Markup') | grepl('Production value', Metric) |
grepl('Production price', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " ", currentyear, " $)"),
Metric %in% c('Purchase (or catch) weight','Production weight') | grepl('Production weight', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " lbs)"),
Metric == 'Recovery rate' | grepl('Percent', Metric) ~ Metric,
Metric == 'Total allowable catch, non-tribal' ~ paste0(Metric, ": Total (", unit, ")"),
T ~ paste0(Metric, " (", unit, ")")),
Statistic = case_when(Metric == 'Percent Commercial catch' ~ 'Utilization by percent',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Utilization by percent',
(Metric == 'Commercial catch' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Unutilized allocation, post-reapportionment' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Initial allocation' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Final allocation' & Statistic == 'Total') ~ 'Utilization by weight',
T~ Statistic),
Metric = case_when(Metric == 'Percent Commercial catch' ~ 'Commercial catch',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Unutilized allocation, post-reapportionment',
T ~ Metric)) %>%
mutate(ylab = case_when(Metric == 'Utilization by percent' ~ 'Attainment (%)',
Metric == 'Utilization by weight' ~ 'Metric tons (thousands)',
T ~ ylab)) %>%
distinct() %>%
data.frame()
# if FR and vessels are on different years then need to make sure we don't show "all" for the most current year.
# Add impacts by rbind
final <- data_final_format %>%
mutate(rm = case_when(Sector == 'All' & Year > frcurrentyear & Metric != 'Total allowable catch, non-tribal' ~ 1,
T ~ 0)) %>%
filter(rm != 1) %>%
select(-rm) %>%
rbind(mscv_impacts) %>%
rbind(cp_impacts)
##-----------------------------##
# -------Compare function-----####
##-----------------------------##
mini_whiting <- readRDS("mini_whiting.RDS")
old <- mini_whiting %>%
select(-tab, -ylab) %>%
ungroup() %>%
mutate(Metric = case_when(Metric == 'Purchase cost' ~ 'Purchase value',
T ~ Metric),
N = as.numeric(N),
Year = as.numeric(Year))
new <- final %>%
select(-tab, -ylab) %>%
mutate(N = as.numeric(N),
Year = as.numeric(Year))
##
gg <- comparefun(old, new, c('N','Value','Variance', 'q25','q75'), 'wide')
# Check missing combos
gg2 <- filter(gg, combomiss == 'Missing combo', Metric != 'Recovery rate')
gg3 <- filter(gg, combomiss == 'Fine')
# units switched to millions because in 2018 shoreside had value of over million
gg2_ck <- filter(final, Metric == 'Other (Production value)' & Statistic == 'Mean')
thres <- filter(gg, Value_percDiff > 0.05)
##-----------------------------##
##Remove metrics that we dont want to include#####
##-----------------------------##
final <- filter(final, !Metric %in% c('Recovery rate'))
##------------------------------##
##Reorder by column name############
##------------------------------##
final <- final[c('Year','Sector','Metric','Statistic','N','Value','Variance','q25','q75','Order','tab','unit','ylab')]
##-----------------------------##
#----------Save data----------####
##---------------------------##
mini_whiting <- final
rownames(mini_whiting) <- NULL
saveRDS(mini_whiting, file = "mini_whiting.RDS")
shiny::runApp()
View(mini_whiting)
data_final_format <- data_final_allcombosnew %>%
rbind(tac_final, unused_tac) %>%
mutate(Value = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Markup')
& Sector == 'Catcher-Processor' ~ NA_real_,
T ~ Value),
Order = case_when(grepl('Surimi', Metric) ~ 1,
grepl('Fishmeal', Metric) ~ 2,
grepl('Fillet', Metric) ~ 3,
grepl('Headed-and-gutted', Metric) ~ 4,
grepl('Frozen whole/Round', Metric) ~ 5,
grepl('Minced', Metric) ~ 6,
grepl('Fish oil', Metric) ~ 7,
grepl('Unprocessed', Metric) ~ 8,
grepl('Other', Metric) ~ 9),
tab = case_when(grepl('Percent by value', Metric) ~ 'Not in use',
grepl('Percent by weight', Metric) ~ 'Not in use',
grepl('Roe', Metric) ~ 'Not in use',
grepl('Surimi', Metric) ~ 'Product',
grepl('Fishmeal', Metric) ~ 'Product',
grepl('Fillet', Metric) ~ 'Product',
grepl('Headed-and-gutted', Metric) ~ 'Product',
grepl('Frozen whole/Round', Metric) ~ 'Product',
grepl('Minced', Metric) ~ 'Product',
grepl('Fish oil', Metric) ~ 'Product',
grepl('Unprocessed', Metric) ~ 'Product',
grepl('Other', Metric) ~ 'Product',
grepl('Commercial catch', Metric) ~ 'TACU',
grepl('Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Percent Commercial catch', Metric) ~ 'TACU',
grepl('Percent Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Initial allocation', Metric) ~ 'TACU',
grepl('Final allocation', Metric) ~ 'TACU',
T ~ 'Summary')) %>%
group_by(Metric, Statistic) %>%
mutate(
unit = case_when(max(Value, na.rm = T) < 1e3 ~ '',
max(Value, na.rm = T) < 1e6 ~ 'thousands',
max(Value, na.rm = T) < 1e9 ~ 'millions',
max(Value, na.rm = T) < 1e12 ~ 'billions',
T ~ 'help'),
ylab = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Production value',
'Production price (per lb)', 'Markup') | grepl('Production value', Metric) |
grepl('Production price', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " ", currentyear, " $)"),
Metric %in% c('Purchase (or catch) weight','Production weight') | grepl('Production weight', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " lbs)"),
Metric == 'Recovery rate' | grepl('Percent', Metric) ~ Metric,
Metric == 'Total allowable catch, non-tribal' ~ paste0(Metric, ": Total (", unit, ")"),
T ~ paste0(Metric, " (", unit, ")")),
Statistic = case_when(Metric == 'Percent Commercial catch' ~ 'Utilization by percent',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Utilization by percent',
(Metric == 'Commercial catch' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Unutilized allocation, post-reapportionment' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Initial allocation' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Final allocation' & Statistic == 'Total') ~ 'Utilization by weight',
T~ Statistic),
Metric = case_when(Metric == 'Percent Commercial catch' ~ 'Commercial catch',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Unutilized allocation, post-reapportionment',
T ~ Metric)) %>%
mutate(ylab = case_when(Statistic == 'Utilization by percent' ~ 'Attainment (%)',
Statistic == 'Utilization by weight' ~ 'Metric tons (millions)',
T ~ ylab)) %>%
distinct() %>%
data.frame()
# if FR and vessels are on different years then need to make sure we don't show "all" for the most current year.
# Add impacts by rbind
final <- data_final_format %>%
mutate(rm = case_when(Sector == 'All' & Year > frcurrentyear & Metric != 'Total allowable catch, non-tribal' ~ 1,
T ~ 0)) %>%
filter(rm != 1) %>%
select(-rm) %>%
rbind(mscv_impacts) %>%
rbind(cp_impacts)
##-----------------------------##
# -------Compare function-----####
##-----------------------------##
mini_whiting <- readRDS("mini_whiting.RDS")
old <- mini_whiting %>%
select(-tab, -ylab) %>%
ungroup() %>%
mutate(Metric = case_when(Metric == 'Purchase cost' ~ 'Purchase value',
T ~ Metric),
N = as.numeric(N),
Year = as.numeric(Year))
new <- final %>%
select(-tab, -ylab) %>%
mutate(N = as.numeric(N),
Year = as.numeric(Year))
##
gg <- comparefun(old, new, c('N','Value','Variance', 'q25','q75'), 'wide')
# Check missing combos
gg2 <- filter(gg, combomiss == 'Missing combo', Metric != 'Recovery rate')
gg3 <- filter(gg, combomiss == 'Fine')
# units switched to millions because in 2018 shoreside had value of over million
gg2_ck <- filter(final, Metric == 'Other (Production value)' & Statistic == 'Mean')
thres <- filter(gg, Value_percDiff > 0.05)
##-----------------------------##
##Remove metrics that we dont want to include#####
##-----------------------------##
final <- filter(final, !Metric %in% c('Recovery rate'))
##------------------------------##
##Reorder by column name############
##------------------------------##
final <- final[c('Year','Sector','Metric','Statistic','N','Value','Variance','q25','q75','Order','tab','unit','ylab')]
##-----------------------------##
#----------Save data----------####
##---------------------------##
mini_whiting <- final
rownames(mini_whiting) <- NULL
saveRDS(mini_whiting, file = "mini_whiting.RDS")
View(mini_whiting)
runApp()
data_final_format <- data_final_allcombosnew %>%
rbind(tac_final, unused_tac) %>%
mutate(Value = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Markup')
& Sector == 'Catcher-Processor' ~ NA_real_,
T ~ Value),
Order = case_when(grepl('Surimi', Metric) ~ 1,
grepl('Fishmeal', Metric) ~ 2,
grepl('Fillet', Metric) ~ 3,
grepl('Headed-and-gutted', Metric) ~ 4,
grepl('Frozen whole/Round', Metric) ~ 5,
grepl('Minced', Metric) ~ 6,
grepl('Fish oil', Metric) ~ 7,
grepl('Unprocessed', Metric) ~ 8,
grepl('Other', Metric) ~ 9),
tab = case_when(grepl('Percent by value', Metric) ~ 'Not in use',
grepl('Percent by weight', Metric) ~ 'Not in use',
grepl('Roe', Metric) ~ 'Not in use',
grepl('Surimi', Metric) ~ 'Product',
grepl('Fishmeal', Metric) ~ 'Product',
grepl('Fillet', Metric) ~ 'Product',
grepl('Headed-and-gutted', Metric) ~ 'Product',
grepl('Frozen whole/Round', Metric) ~ 'Product',
grepl('Minced', Metric) ~ 'Product',
grepl('Fish oil', Metric) ~ 'Product',
grepl('Unprocessed', Metric) ~ 'Product',
grepl('Other', Metric) ~ 'Product',
grepl('Commercial catch', Metric) ~ 'TACU',
grepl('Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Percent Commercial catch', Metric) ~ 'TACU',
grepl('Percent Unutilized allocation, post-reapportionment', Metric) ~ 'TACU',
grepl('Initial allocation', Metric) ~ 'TACU',
grepl('Final allocation', Metric) ~ 'TACU',
T ~ 'Summary')) %>%
group_by(Metric, Statistic) %>%
mutate(
unit = case_when(max(Value, na.rm = T) < 1e3 ~ '',
max(Value, na.rm = T) < 1e6 ~ 'thousands',
max(Value, na.rm = T) < 1e9 ~ 'millions',
max(Value, na.rm = T) < 1e12 ~ 'billions',
T ~ 'help'),
ylab = case_when(Metric %in% c('Purchase value','Purchase price (per lb)','Production value',
'Production price (per lb)', 'Markup') | grepl('Production value', Metric) |
grepl('Production price', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " ", currentyear, " $)"),
Metric %in% c('Purchase (or catch) weight','Production weight') | grepl('Production weight', Metric) ~
paste0(Metric, ": ", Statistic, " (", unit, " lbs)"),
Metric == 'Recovery rate' | grepl('Percent', Metric) ~ Metric,
Metric == 'Total allowable catch, non-tribal' ~ paste0(Metric, ": Total (", unit, ")"),
T ~ paste0(Metric, " (", unit, ")")),
Statistic = case_when(Metric == 'Percent Commercial catch' ~ 'Utilization by percent',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Utilization by percent',
(Metric == 'Commercial catch' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Unutilized allocation, post-reapportionment' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Initial allocation' & Statistic == 'Total') ~ 'Utilization by weight',
(Metric == 'Final allocation' & Statistic == 'Total') ~ 'Utilization by weight',
T~ Statistic),
Metric = case_when(Metric == 'Percent Commercial catch' ~ 'Commercial catch',
Metric == 'Percent Unutilized allocation, post-reapportionment' ~ 'Unutilized allocation, post-reapportionment',
T ~ Metric)) %>%
mutate(ylab = case_when(Statistic == 'Utilization by percent' ~ 'Attainment (%)',
Statistic == 'Utilization by weight' ~ 'Catch weight in metric tons (millions)',
T ~ ylab)) %>%
distinct() %>%
data.frame()
# if FR and vessels are on different years then need to make sure we don't show "all" for the most current year.
# Add impacts by rbind
final <- data_final_format %>%
mutate(rm = case_when(Sector == 'All' & Year > frcurrentyear & Metric != 'Total allowable catch, non-tribal' ~ 1,
T ~ 0)) %>%
filter(rm != 1) %>%
select(-rm) %>%
rbind(mscv_impacts) %>%
rbind(cp_impacts)
##-----------------------------##
# -------Compare function-----####
##-----------------------------##
mini_whiting <- readRDS("mini_whiting.RDS")
old <- mini_whiting %>%
select(-tab, -ylab) %>%
ungroup() %>%
mutate(Metric = case_when(Metric == 'Purchase cost' ~ 'Purchase value',
T ~ Metric),
N = as.numeric(N),
Year = as.numeric(Year))
new <- final %>%
select(-tab, -ylab) %>%
mutate(N = as.numeric(N),
Year = as.numeric(Year))
##
gg <- comparefun(old, new, c('N','Value','Variance', 'q25','q75'), 'wide')
# Check missing combos
gg2 <- filter(gg, combomiss == 'Missing combo', Metric != 'Recovery rate')
gg3 <- filter(gg, combomiss == 'Fine')
# units switched to millions because in 2018 shoreside had value of over million
gg2_ck <- filter(final, Metric == 'Other (Production value)' & Statistic == 'Mean')
thres <- filter(gg, Value_percDiff > 0.05)
##-----------------------------##
##Remove metrics that we dont want to include#####
##-----------------------------##
final <- filter(final, !Metric %in% c('Recovery rate'))
##------------------------------##
##Reorder by column name############
##------------------------------##
final <- final[c('Year','Sector','Metric','Statistic','N','Value','Variance','q25','q75','Order','tab','unit','ylab')]
##-----------------------------##
#----------Save data----------####
##---------------------------##
mini_whiting <- final
rownames(mini_whiting) <- NULL
saveRDS(mini_whiting, file = "mini_whiting.RDS")
runApp()
shiny::runApp()
runApp()
