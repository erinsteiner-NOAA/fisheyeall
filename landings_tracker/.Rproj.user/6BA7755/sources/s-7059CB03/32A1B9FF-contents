library(dplyr)
library(data.table)
source("helperfns.R")
library(odbc)
library(getPass)
library(fredr)

# pacfin <- DBI::dbConnect(odbc::odbc(),
#                          host   = "pacfindb.psmfc.org",
#                          UID    = getPass('pacfin username'),
#                          PWD    = getPass('pacfin password'),
#                          dsn    = 'pacfin',
#                          port   = 2045)

# Deflator #####
fredr_set_key('a5d92deb507a05eb5a7f84355a02f602')
fred_gdpdefl <- fredr(
  series_id = "GDPDEF",
  observation_start = as.Date("2015-01-01")
) 

defl_adj <- mutate(fred_gdpdefl, LANDING_YEAR = format(date,"%Y")) %>%
  group_by(LANDING_YEAR) %>%
  summarise(defl = mean(value)) %>%
  mutate(DEFL = defl/defl[LANDING_YEAR == 2020]) %>%
  select(-defl)

# Formatting data frame for Marie #####
comp_dat_covid_app <- readRDS("comp_dat_covidapp.RDS") %>%
  data.table()
setkey(comp_dat_covid_app, State, Species)
# split up the month and other filters befor joining to reduce size of df 
addlfilters <- readRDS("addlfilters.RDS")
othr_filter <- select(addlfilters, -c(month_prop, select_month)) %>% distinct() %>%
  data.table()
setkey(othr_filter, State, Species)

data <- othr_filter[comp_dat_covid_app, on = c('State','Species')] %>%
  data.table()

# If is.na(Value) then confidential
## --------------------------------------------------------------------------------------------- ##

# ---------"fishery importance" variables -------- #

# how much does this fishery contribute to state-wide revenue (based on 5-year median)
state_proportion <- data %>%
  distinct(State, Species, state_prop1)

# number of unique vessels by year (based on 5-year median)
comp_dat_all <- readRDS("comp_dat_all.RDS")

participants <- comp_dat_all %>%
  filter(!is.na(VESSEL_NUM), YEAR != 2020) %>%
  group_by(YEAR, SPECIES_GROUP, AGENCY_CODE) %>%
  summarise(num_vss = length(unique(VESSEL_NUM))) %>%
  group_by(SPECIES_GROUP, AGENCY_CODE) %>%
  summarise(N = median(num_vss)) %>%
  ungroup() %>%
  rename(Species = SPECIES_GROUP,
         State = AGENCY_CODE) %>%
  mutate(Species = convert_sp(Species),
         Species = as.factor(Species),
         State = convert_state(State))

## ------------------------------------ YTD statistics ----------------------------------------------- ##

# Percent change in cumulative ex-vessel revenue & landed weight by fishery comparing 2020 to 2015-2019 median
perchange_byfishery <- data %>%
  filter(Cumulative == 'Y', Year %in% c('2020', 'Baseline'), grepl('05', LANDING_MONTH), Interval == 'Monthly', Statistic == 'Total', State != 'At-sea') %>%
  mutate(Year = ifelse(Year == '2020', 'current', 'Baseline')) %>%
  reshape2::dcast(State + Species + Metric  ~ Year,
                  value.var = "Value") %>%
  mutate(percchange = round((current - Baseline)/Baseline*100,0)) %>%
  merge(state_proportion, by = c('State', 'Species')) %>%
  merge(participants, by = c('State', 'Species'))

perchange_whiting <- data %>%
  filter(Cumulative == 'Y', Year %in% c('2020', 'Baseline'), grepl('Whiting', Species), grepl('06', LANDING_MONTH), Interval == 'Monthly', Statistic == 'Total') %>%
  mutate(Year = ifelse(Year == '2020', 'current', 'Baseline')) %>%
  reshape2::dcast(State + Species + Metric  ~ Year,
                  value.var = "Value") %>%
  mutate(percchange = round((current - Baseline)/Baseline*100,0)) %>%
  merge(state_proportion, by = c('State', 'Species')) %>%
  merge(participants, by = c('State', 'Species'))

whiting_check <- data %>%
  filter(Cumulative == 'Y', Year %in% c('2015', '2016', '2017', '2018', '2019'), grepl('Whiting', Species), grepl('06', LANDING_MONTH), Interval == 'Monthly', Statistic == 'Total', State == 'All', grepl('Landed weight', Metric)) %>%
  group_by(State, Species) %>%
  summarise(baseline = median(Value))
  
## ------------------------------------- May statistics ---------------------------------------------- ##

# Percent change in ex-vessel revenue & landed weight by fishery for May comparing 2020 to 2015-2019 median
perchange_byfishery_May <- data %>%
  filter(Species != 'Tuna', !grepl('Whiting', Species)) %>%
  filter(Cumulative == 'N', Year %in% c('2020', 'Baseline'), (grepl('05', LANDING_MONTH) | grepl('04', LANDING_MONTH)), Interval == 'Monthly', Statistic == 'Total', State != 'At-sea') %>%
  mutate(Year = ifelse(Year == '2020', 'current', 'Baseline')) %>%
  distinct() %>%
  reshape2::dcast(State + Species + Metric + LANDING_MONTH ~ Year,
                  value.var = "Value") %>%
  mutate(percchange = round((current - Baseline)/Baseline*100,0)) %>%
  mutate(month = ifelse(grepl('04', LANDING_MONTH), 'April', ifelse(grepl('05', LANDING_MONTH), 'May', LANDING_MONTH))) %>%
  select(-LANDING_MONTH)

shrimp_check <- merge(dbGetQuery(pacfin, "select sum(landed_weight_lbs)/1e3 lbs, sum(exvessel_revenue)/1e3 rev, pacfin_species_code, agency_code
                           from pacfin_marts.comprehensive_ft
                           where landing_year = 2020 and management_group_code = 'SRMP' and landing_month < 6
                           group by pacfin_species_code, agency_code
                           order by agency_code, rev desc"),
                      dbGetQuery(pacfin, "select sum(landed_weight_lbs)/1e3 tot_lbs, sum(exvessel_revenue)/1e3 tot_rev, agency_code
                           from pacfin_marts.comprehensive_ft
                           where landing_year = 2020 and management_group_code = 'SRMP' and landing_month < 6
                           group by agency_code
                           order by agency_code, tot_rev desc"), by = 'AGENCY_CODE') %>%
  mutate(share_lbs = round((LBS/TOT_LBS)*100, 0),
         share_rev = round((REV/TOT_REV)*100, 0))

shrimp_month <- dbGetQuery(pacfin, "select sum(landed_weight_lbs)/1e3 lbs, sum(exvessel_revenue)/1e3 rev, pacfin_species_code, landing_month, agency_code
                           from pacfin_marts.comprehensive_ft
                           where landing_year = 2020 and management_group_code = 'SRMP' and landing_month < 6
                           group by pacfin_species_code, landing_month, agency_code
                           order by agency_code, landing_month, rev desc")

# Check what only Mar-May looks like 
# Percent change in cumulative ex-vessel revenue & landed weight by fishery comparing March-May 2020 to 2015-2019 median
perchange_byfishery_MM <- comp_dat_covid_app %>%
  filter(Cumulative == 'Y', Year %in% c('2020', 'Baseline'), (grepl('05', LANDING_MONTH) | grepl('02', LANDING_MONTH)), Interval == 'Monthly', Statistic == 'Total', State != 'At-sea') %>%
  mutate(Year = ifelse(Year == '2020', 'current', 'Baseline'),
         month = ifelse(grepl('02', LANDING_MONTH), 'Feb', ifelse(grepl('05', LANDING_MONTH), 'May', LANDING_MONTH))) %>%
  reshape2::dcast(State + Species + Metric + Year ~ month,
                  value.var = "Value") %>%
  mutate(cum_MM = May - Feb) %>%
  reshape2::dcast(State + Species + Metric  ~ Year,
                  value.var = "cum_MM") %>%
  mutate(percchange = round((current - Baseline)/Baseline*100,0))

## ------------------------------------- Region-wide statistics ---------------------------------------------- ##

# Some notes - 
# (1) No action needed; noting in case question about numbers diff than tracker: In the landings tracker we lump 
# 'OTHER CRAB', 'ANCHOVY', 'SARDINE', 'OTHER COASTAL PELAGIC' into other species. But I think for these 
# purposes it is better to leave them as is. Also there are 21 CA whiting tickets. 
# We removed these from the landings tracker, but think they are included here. 
# Landings tracker removes a few outliers, but I don't think it is worth it here.


# Region-wide change in ex-vessel revenue & landed weight
comp_dat_raw_load <- readRDS('comp_dat_raw.RDS') %>%
  # Decided not to implement the disaster years because it doesn't work same way here
  # I think we would need to find 5 yr median for each fishery then add together to implement
  # Remove diaster years from the baseline for crab. For sardine I think we need
  # to remove completely because if 0 sardine in baseline then comparing to 2020 w sardine wouldn't make sense (I think)
  # mutate(excl = case_when(grepl('CRAB', SPECIES_GROUP) & LANDING_YEAR %in% c(2015,2016) ~ 1,
  #                         SPECIES_GROUP == 'SARDINE' ~ 1,
  #                         T ~ 0)) %>%
  # I think I would remove shellfish like we discussed (ie. too nuanced)
  filter(SPECIES_GROUP != 'SHELLFISH', LANDING_YEAR > 2014) %>% #, excl == 0) %>%
  merge(defl_adj) %>%
  mutate(EXVESSEL_REVENUE = EXVESSEL_REVENUE/DEFL) %>%
  select(-DEFL) #, -excl)

region_total_YTD <- comp_dat_raw_load %>%
  filter(LANDING_MONTH < 6) %>%
  group_by(LANDING_YEAR) %>%
  summarise(REV = sum(EXVESSEL_REVENUE),
            WEIGHT = sum(ROUND_WEIGHT_MTONS)) %>%
  reshape2::melt(c('LANDING_YEAR')) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', 'current')) %>%
  group_by(period, variable) %>%
  summarise(median = median(value)) %>%
  mutate(description = 'Total region-wide') %>%
  reshape2::dcast(description + variable ~ period,
                  value.var = "median") %>%
  mutate(percchange = round((current - baseline)/baseline*100,0))

region_total_MAY <- comp_dat_raw_load %>%
  filter(LANDING_MONTH == 5) %>%
  group_by(LANDING_YEAR) %>%
  summarise(REV = sum(EXVESSEL_REVENUE),
            WEIGHT = sum(ROUND_WEIGHT_MTONS)) %>%
  reshape2::melt(c('LANDING_YEAR')) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', 'current')) %>%
  group_by(period, variable) %>%
  summarise(median = median(value)) %>%
  mutate(description = 'Total region-wide May') %>%
  reshape2::dcast(description + variable ~ period,
                  value.var = "median") %>%
  mutate(percchange = round((current - baseline)/baseline*100,0))

region_total_APR <- comp_dat_raw_load %>%
  filter(LANDING_MONTH == 4) %>%
  group_by(LANDING_YEAR) %>%
  summarise(REV = sum(EXVESSEL_REVENUE),
            WEIGHT = sum(ROUND_WEIGHT_MTONS)) %>%
  reshape2::melt(c('LANDING_YEAR')) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', 'current')) %>%
  group_by(period, variable) %>%
  summarise(median = median(value)) %>%
  mutate(description = 'Total region-wide April') %>%
  reshape2::dcast(description + variable ~ period,
                  value.var = "median") %>%
  mutate(percchange = round((current - baseline)/baseline*100,0))

region_total <- rbind(region_total_YTD, region_total_MAY, region_total_APR)

## ------------------------------------- State statistics ---------------------------------------------- ##
state_total_YTD <- comp_dat_raw_load %>%
  filter(LANDING_MONTH < 6) %>%
  group_by(LANDING_YEAR, AGENCY_CODE) %>%
  summarise(REV = sum(EXVESSEL_REVENUE),
            WEIGHT = sum(ROUND_WEIGHT_MTONS)) %>%
  reshape2::melt(c('LANDING_YEAR', 'AGENCY_CODE')) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', 'current')) %>%
  group_by(period, AGENCY_CODE, variable) %>%
  summarise(median = median(value)) %>%
  mutate(description = 'Total state-wide') %>%
  reshape2::dcast(description + variable + AGENCY_CODE ~ period,
                  value.var = "median") %>%
  mutate(percchange = round((current - baseline)/baseline*100,0))

state_total_MAY <- comp_dat_raw_load %>%
  filter(LANDING_MONTH == 5) %>%
  group_by(LANDING_YEAR, AGENCY_CODE) %>%
  summarise(REV = sum(EXVESSEL_REVENUE),
            WEIGHT = sum(ROUND_WEIGHT_MTONS)) %>%
  reshape2::melt(c('LANDING_YEAR', 'AGENCY_CODE')) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', 'current')) %>%
  group_by(period, variable, AGENCY_CODE) %>%
  summarise(median = median(value)) %>%
  mutate(description = 'Total state-wide May') %>%
  reshape2::dcast(description + variable + AGENCY_CODE ~ period,
                  value.var = "median") %>%
  mutate(percchange = round((current - baseline)/baseline*100,0))

state_total <- rbind(state_total_YTD, state_total_MAY)

#------------ Exploring state differences----------------#####
state_by_species <- comp_dat_raw_load %>%
  filter(LANDING_MONTH < 6, AGENCY_CODE != 'F') %>%
  group_by(LANDING_YEAR, AGENCY_CODE, SPECIES_GROUP) %>%
  summarise(REV = sum(EXVESSEL_REVENUE),
            WEIGHT = sum(ROUND_WEIGHT_MTONS)) %>%
  reshape2::melt(c('LANDING_YEAR', 'AGENCY_CODE', 'SPECIES_GROUP')) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', 'current')) %>%
  group_by(period, AGENCY_CODE, SPECIES_GROUP, variable) %>%
  summarise(median = median(value)) %>%
  #mutate(description = 'Total state-wide') %>%
  reshape2::dcast(AGENCY_CODE + SPECIES_GROUP + variable ~ period,
                  value.var = "median") %>%
  mutate(percchange = round((current - baseline)/baseline*100,0)) %>%
  filter(!is.na(current))%>%  
  group_by(AGENCY_CODE, variable) %>%
  mutate(tot = sum(current)) %>%
  mutate(contribution = (current/tot)*100) 
