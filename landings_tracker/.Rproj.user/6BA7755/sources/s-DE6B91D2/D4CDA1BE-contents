library(dplyr)
library(reshape2)
library(ggplot2)
devtools::install_github("sboysel/fredr")
library(fredr)
fredr_set_key('a5d92deb507a05eb5a7f84355a02f602')
fred_gdpdefl <- fredr(
  series_id = "GDPDEF",
  observation_start = as.Date("2015-01-01")
) 

defl_new <- mutate(fred_gdpdefl, LANDING_YEAR = format(date,"%Y")) %>%
  group_by(LANDING_YEAR) %>%
  summarise(defl = mean(value)) %>%
  mutate(DEFL = defl/defl[LANDING_YEAR == 2020])


# set current month to determine which months should be used "as-is" and which should be forecast
currentmonth <- 6

# Deflator #####
# Currently coded to treat 2020 as 2019$
# from Marie: does look like we have a quarter 1 estimate now if we want to use it - https://fred.stlouisfed.org/series/GDPDEF#0
defl <- structure(list(LANDING_YEAR = c(2014, 2015, 2016, 2017, 2018, 2019), 
    DEFL = c(0.92239, 0.93203, 0.94167, 0.95938, 0.98276, 1)), row.names = 30:35, class = "data.frame")
defl2020 <- filter(defl, LANDING_YEAR == 2019) %>%
  mutate(LANDING_YEAR = 2020)
defl_adj <- rbind(defl, defl2020)

# pull in data from datapull.R
comp_dat_raw_load <- readRDS('comp_dat_raw.RDS') %>%
  merge(defl_adj) %>%
  mutate(EXVESSEL_REVENUE = EXVESSEL_REVENUE/DEFL) %>%
  select(-DEFL)


# Calculate average baseline for each fishery/month
monthly_rev <- group_by(comp_dat_raw_load, LANDING_MONTH, SPECIES_GROUP, LANDING_YEAR) %>%
  summarise(REV = sum(EXVESSEL_REVENUE)) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', '2020')) %>%
  group_by(LANDING_MONTH, SPECIES_GROUP, period) %>%
  summarise(mean = mean(REV))

# just pull the baseline numbers
baseline_monthly_rev <- subset(monthly_rev, period == 'baseline') %>%
  rename(baseline_avg = mean) %>%
  select(LANDING_MONTH, SPECIES_GROUP, baseline_avg)

# just pull the current numbers
current_monthly_rev <- subset(monthly_rev, period == '2020' & LANDING_MONTH < currentmonth) %>%
  rename(revenue = mean) %>%
  select(LANDING_MONTH, SPECIES_GROUP, revenue) %>%
  mutate(source = 'actual') %>%
  mutate(propchange = 1)

# calculate the change compared to baseline, using march:current month -1
# from Marie: this currently doesn't include March
change_by_species <- subset(comp_dat_raw_load, LANDING_MONTH > 3 & LANDING_MONTH < currentmonth) %>%
  group_by(SPECIES_GROUP, LANDING_YEAR) %>%
  summarise(REV = sum(EXVESSEL_REVENUE)) %>%
  mutate(period = ifelse(LANDING_YEAR < 2020, 'baseline', '2020')) %>%
  group_by(SPECIES_GROUP, period) %>%
  summarise(mean = mean(REV)) %>%
  dcast(SPECIES_GROUP ~ period, value.var = 'mean', fill = 0) %>%
  mutate(propchange = (`2020`/baseline - 1)) %>%
  select(SPECIES_GROUP, propchange)

# do the forecast
forecasts <- subset(baseline_monthly_rev, LANDING_MONTH >= currentmonth) %>%
  left_join(change_by_species) %>%
  mutate(revenue = (propchange + 1) * baseline_avg) %>%
  mutate(source = 'forecast') %>%
  select(LANDING_MONTH, SPECIES_GROUP, propchange, revenue, source)

# combine the data
full_data_set <- bind_rows(current_monthly_rev, forecasts)

subset(full_data_set, SPECIES_GROUP != 'DUNGENESS CRAB') %>%
ggplot(aes(x = LANDING_MONTH, y = revenue)) +
  geom_line(aes(color = SPECIES_GROUP, linetype = source)) 

write.table(full_data_set, file = 'forecast_first_draft.csv', sep = ',', row.names = F)



