# set server library here
# For instance: 
.libPaths(c("/usr/lib64/R/shiny_library/fisheye", .libPaths()))

library(jsonlite)
library(shiny)
library(ggplot2)
library(dplyr)
library(DT)
library(plotly)
library(shinythemes)
library(shinycssloaders)
library(appFrame)

##UI part of the app. The ui piece is not reactive and is used for setting up the permanent pieces of the app.
# This is where stylesheets can be added

shinyUI(fluidPage(theme = shinytheme("cerulean"),
                  tags$head(
                    tags$style(HTML("
                                    .shiny-output-error-validation {
                                    color: blue;
                                    }"))
                  ),
  appFrameHeaderScrolling(),
  navbarPage(id = "page", collapsible = T, inverse = F,
             title = "Landings Tracker",
             tabPanel("Explore the data", value = "results",
                      fluidRow(
                        column(6,
                               h5(em(HTML("This app was designed to be an exploratory tool to look at trends in fisheries landings.
                        Depending on the state and the fishery, the lag in data could be as little as a few days or
                        as long as a month. The data that are likely still incomplete are labeled in the table and 
                        visualized using a blue dotted line. More information about fish ticket completeness 
                                   can be found at http://pacfin.psmfc.org/."))))),
                      fluidRow(
                        column(6, 
                               h5(strong("Data were updated on October 28, 2020")))),
                      fluidRow(
                        column(3,
                        wellPanel(
                             h4(strong("Filtering options")),
                                     tabsetPanel(type = "pills", id = "filter_ops",
                                                 tabPanel("Importance",
                                                          h5(em("Filter fisheries by state and the level of importance (measured as percent revenue)")),
                                                          uiOutput("state_select"),
                                                          uiOutput("state_prop")),
                                                 tabPanel("Seasonality",
                                                          h5(em("Filter fisheries by month and level of activity (measured as percent revenue)")),
                                                          uiOutput("month_select"),
                                                          uiOutput("month_prop"),
                                                          uiOutput("state1Input")),
                                                 tabPanel("2020 change",
                                                          h5(em("Filter fisheries by 2020 percent change in  exvessel revenue compared to 2015-2019")),
                                                          uiOutput("perc_change"),
                                                          uiOutput("state2Input")),
                                                 tabPanel("Custom output",
                                                          h5(em("Customize output by selecting state and fishery of interest")),
                                                          uiOutput("regionInput"),
                                                          uiOutput("mgrpInput"))),
                                     h4(strong("General settings")),
                                     uiOutput("metricInput"),
                                     uiOutput("statInput"),
                                     uiOutput("wkInput"),
                                     uiOutput("cumulInput"),
                                     h5(em("*Cumulative only applies to exvessel revenue and weight metric")),
                                     uiOutput("download_Table"),
                             uiOutput("download_Figure"))),
                        column(9,
                          tabsetPanel(type = "tabs",
                                      tabPanel("Plot", 
                                               column(8,
                                               plotlyOutput("plot") %>% withSpinner(color="#0dc5c1")), 
                                               column(1, offset = 2,
                                             fluidRow(column(1,
                                                             h2(""))),
                                             
                                             fluidRow(column(1,
                                                             h2(""))),
                                             fluidRow(column(1,
                                                             h2(""))),
                                             fluidRow(column(1,
                                                             h2(""))),
                                             fluidRow(column(1,
                                                             img(src = "legend2.PNG")))),
                                             style ="min-height: 1600px;"),
                                      tabPanel("Table", DT::dataTableOutput("table")))))),
             tabPanel("Fishery timing",
                      img(src = "timing_plot.png", height = '650px', width = '900px')),
             tabPanel("Information page",
                       source("info_page.R")$value)
  ),
  appFrameFooterScrolling()
)
)

