{"frames":[{"func":"dbGetQuery(framdw, \"select vessel_name, vessel_id, limited_entry_permit_id LEP_ID, company_name, first_receiver_site_license, survey_year, review_status, missing_values, received_on, determined_on, survent_status, qaqc_status, address_line_1, address_line_2, city, state, zipcode, phone\\n           from edcsurvey_admin_v where survey_year > 2010\") %>% \n    merge(dbGetQuery(framdw, \"select vessel_name, vessel_id, limited_entry_permit_id LEP_ID, company_name, first_receiver_site_license, survey_year, review_status, missing_values, received_on, determined_on, survent_status, qaqc_status, address_line_1, address_line_2, city, state, zipcode, phone \\n                  from fram_analysis_current.edcsurvey_admin_v \\n                   where  edcsurvey_dbid not in (select distinct edcsurvey_dbid from fram_analysis_current.edcsurvey_edcdata_v where edcsurvey_dbid is not null)\"), \n        all = T) %>% mutate(DUE_DATE = ymd(paste0((SURVEY_YEAR + \n    1), \"-09-01\"))) %>% mutate(LATE = ifelse(RECEIVED_ON > DUE_DATE +  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(lhs, parent, parent)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(lhs, parent, parent)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dbGetQuery(framdw, \"select vessel_name, vessel_id, limited_entry_permit_id LEP_ID, company_name, first_receiver_site_license, survey_year, review_status, missing_values, received_on, determined_on, survent_status, qaqc_status, address_line_1, address_line_2, city, state, zipcode, phone\\n           from edcsurvey_admin_v where survey_year > 2010\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dbGetQuery(framdw, \"select vessel_name, vessel_id, limited_entry_permit_id LEP_ID, company_name, first_receiver_site_license, survey_year, review_status, missing_values, received_on, determined_on, survent_status, qaqc_status, address_line_1, address_line_2, city, state, zipcode, phone\\n           from edcsurvey_admin_v where survey_year > 2010\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".local(conn, statement, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dbSendQuery(conn, statement, params = params, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dbSendQuery(conn, statement, params = params, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".local(conn, statement, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"OdbcResult(connection = conn, statement = statement, params = params, \n    immediate = immediate)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"new_result(connection@ptr, statement, immediate)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(structure(list(message = \"nanodbc/nanodbc.cpp:1655: 42S02: [Oracle][ODBC][Ora]ORA-00942: table or view does not exist\\n \\n<SQL> 'select vessel_name, vessel_id, limited_entry_permit_id LEP_ID, company_name, first_receiver_site_license, survey_year, review_status, missing_values, received_on, determined_on, survent_status, qaqc_status, address_line_1, address_line_2, city, state, zipcode, phone\\n           from edcsurvey_admin_v where survey_year > 2010'\", \n    call = NULL, cppstack = NULL), class = c(\"odbc::odbc_error\", \n\"C++Error\", \"error\", \"condition\")))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: nanodbc/nanodbc.cpp:1655: 42S02: [Oracle][ODBC][Ora]ORA-00942: table or view does not exist\n \n<SQL> 'select vessel_name, vessel_id, limited_entry_permit_id LEP_ID, company_name, first_receiver_site_license, survey_year, review_status, missing_values, received_on, determined_on, survent_status, qaqc_status, address_line_1, address_line_2, city, state, zipcode, phone\n           from edcsurvey_admin_v where survey_year > 2010'\n"}